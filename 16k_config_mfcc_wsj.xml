<?xml version="1.0" encoding="UTF-8"?>

<config>

	<property name="logLevel" value="WARNING" />
	<property name="absoluteBeamWidth" value="-1" />
	<property name="relativeBeamWidth" value="1E-200" />
	<property name="wordInsertionProbability" value="0.2" />
	<property name="languageWeight" value="10.5" />

	<property name="frontend" value="epFrontEnd" />
	<property name="recognizer" value="recognizer" />
	<property name="showCreations" value="false" />
	<property name="outOfGrammarProbability" value="1E-10"/>
	<property name="phoneInsertionProbability" value="1E-10"/>
	<component name="recognizer" type="edu.cmu.sphinx.recognizer.Recognizer">
		<property name="decoder" value="decoder" />
		<propertylist name="monitors">
            <item>speedTracker </item>
            <item>memoryTracker </item>
        </propertylist>
	</component>

	<component name="decoder" type="edu.cmu.sphinx.decoder.Decoder">
		<property name="searchManager" value="searchManager" />
	</component>

	<component name="searchManager" type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
		<property name="logMath" value="logMath" />
		<property name="linguist" value="FlatLinguist" />
		<property name="pruner" value="trivialPruner" />
		<property name="scorer" value="threadedScorer" />
		<property name="activeListFactory" value="activeList" />
	</component>

	<component name="activeList" type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
		<property name="logMath" value="logMath" />
		<property name="absoluteBeamWidth" value="${absoluteBeamWidth}" />
		<property name="relativeBeamWidth" value="${relativeBeamWidth}" />
	</component>

	<component name="trivialPruner" type="edu.cmu.sphinx.decoder.pruner.SimplePruner" />

	<component name="threadedScorer" type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
		<property name="frontend" value="${frontend}" />
	</component>

	<component name="FlatLinguist" type="edu.cmu.sphinx.linguist.KWSFlatLinguist.KWSFlatLinguist">
		<property name="logMath" value="logMath" />
		<property name="grammar" value="NoSkipGrammar" />
		<property name="acousticModel" value="wsj" />		
		<property name="wordInsertionProbability" value="${wordInsertionProbability}" />
		<property name="languageWeight" value="${languageWeight}" />
		<property name="unitManager" value="unitManager" />	
		<property name="addOutOfGrammarBranch" value="true"/>
		<property name="phoneLoopAcousticModel" value="WSJ"/>
		<property name="outOfGrammarProbability" value="${outOfGrammarProbability}"/>
		<property name="phoneInsertionProbability" value="${phoneInsertionProbability}"/>
		<property name="dumpGStates" value ="true"/> 	
	</component>

	<component name="NoSkipGrammar" type="edu.cmu.sphinx.linguist.language.grammar.NoSkipGrammar">
		<property name="dictionary" value="dictionary" />
		<property name="logMath" value="logMath" />
		<property name="addSilenceWords" value="false" />
	</component>

	<component name="dictionary" type="edu.cmu.sphinx.linguist.dictionary.FastDictionary">
		<property name="dictionaryPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/dict/cmudict.0.7a" />
		<property name="fillerPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/noisedict" />	
		<property name="addSilEndingPronunciation" value="false" />
		<property name="allowMissingWords" value="true"/>
  		<property name="createMissingWords" value="true"/>
  		<property name="g2pModelPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/model.fst.ser"/>
  		<property name="g2pMaxPron" value="1"/>
		<property name="unitManager" value="unitManager" />
	</component>

	<component name="wsj" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.TiedStateAcousticModel">
		<property name="loader" value="wsjLoader" />
		<property name="unitManager" value="unitManager" />
	</component>

	<component name="wsjLoader" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
		<property name="logMath" value="logMath" />
		<property name="unitManager" value="unitManager" />
		<property name="location" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz" />
	</component>

	<component name="unitManager" type="edu.cmu.sphinx.linguist.acoustic.UnitManager" />
	<component name="WSJ" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.TiedStateAcousticModel">
		<property name="loader" value="WSJLOADER" />
		<property name="unitManager" value="UNITMANAGER" />
	</component>

	<component name="WSJLOADER" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
		<property name="logMath" value="logMath" />
		<property name="unitManager" value="UNITMANAGER" />
		<property name="location" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz" />
	</component>

	<component name="UNITMANAGER" type="edu.cmu.sphinx.linguist.acoustic.UnitManager" />

	<component name="epFrontEnd" type="edu.cmu.sphinx.frontend.FrontEnd">
		<propertylist name="pipeline">
			<item>streamCepstrumSource </item>
			<item>liveCMN </item>
			<item>featureExtraction </item>
		</propertylist>
	</component>

	<component name="streamCepstrumSource" type="edu.cmu.sphinx.frontend.util.StreamCepstrumSource">
	    <property name="sampleRate" value="16000"/>
	</component>

	<component name="liveCMN" type="edu.cmu.sphinx.frontend.feature.LiveCMN" />

	<component name="featureExtraction" type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor" />

	<component name="logMath" type="edu.cmu.sphinx.util.LogMath">
		<property name="logBase" value="1.0001" />
		<property name="useAddTable" value="true" />
	</component>
	
	<!-- The componement can be put into any place in epFrontEnd to check current result -->
	<component name="datadump" type="edu.cmu.sphinx.frontend.util.DataDumper"/>

	<component name="speedTracker"
                type="edu.cmu.sphinx.instrumentation.SpeedTracker">
        <property name="recognizer" value="${recognizer}"/>
        <property name="frontend" value="${frontend}"/>
        <property name="showResponseTime" value="true"/>
    </component>
    
	<component name="memoryTracker" 
               type="edu.cmu.sphinx.instrumentation.MemoryTracker">
        <property name="recognizer" value="${recognizer}"/>
    </component>
	
</config>